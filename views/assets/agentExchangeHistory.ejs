$("#menu-2").addClass("side-menu--active");
    $("#menu-2 + ul").addClass("side-menu__sub-open");

    const chargeTypeHtml = {
      0: `<span class="px-1 rounded inline-block border border-theme-12 text-theme-12 dark:border-theme-6"><%= __('agent_exchange_history.withdraw') %></span>`,
      1: `<span class="px-1 rounded inline-block border border-theme-9 text-theme-9 dark:border-theme-10 dark:text-theme-10"><%= __('agent_exchange_history.deposit') %></span>`,
    };

    let exchangeHistoryTable;
    let sessionAgentId = `<%= session.auth.uuid %>`;
    let sessionAgentCode = `<%= session.auth.agentCode %>`;

    function drawTable() {
      if (exchangeHistoryTable) {
        exchangeHistoryTable.ajax.reload();
      } else {
        exchangeHistoryTable = $("#exchange-history-datatable").DataTable({
          ...dataTableGlobalConfig,
          order: [
            [9, "desc"]
          ],
          columns: [{
              title: "<%= __('agent_exchange_history.table.no') %>",
              data: "no",
              width: "60px",
              orderable: false
            },
            {
              title: "<%= __('agent_exchange_history.table.parent_code') %>",
              data: "parentCode"
            },
            {
              title: "<%= __('agent_exchange_history.table.agent_code') %>",
              data: "agentCode"
            },
            {
              title: "<%= __('agent_exchange_history.table.charge_type') %>",
              data: "chargeType"
            },
            {
              title: "<%= __('agent_exchange_history.table.charge_amount') %>",
              data: "chargeAmount"
            },
            {
              title: "<%= __('agent_exchange_history.table.parent_prev_balance') %>",
              data: "parentPrevBalance"
            },
            {
              title: "<%= __('agent_exchange_history.table.parent_after_balance') %>",
              data: "parentAfterBalance"
            },
            {
              title: "<%= __('agent_exchange_history.table.agent_prev_balance') %>",
              data: "agentPrevBalance"
            },
            {
              title: "<%= __('agent_exchange_history.table.agent_after_balance') %>",
              data: "agentAfterBalance"
            },
            {
              title: "<%= __('agent_exchange_history.table.created_at') %>",
              data: "createdAt",
              width: "160px"
            },
          ],
          ajax: {
            beforeSend: function() {
              $("#card-loading").show();
            },
            complete: function() {
              $("#card-loading").fadeOut();
            },
            url: `/api/agent_transaction`,
            type: "POST",
            data: function(data) {
              data.search = data.search.value;
              data.dir = data.order[0].dir;
              data.order = data.columns[data.order[0].column].data;

              let chargeType = $("#target-charge-type").val();
              if (chargeType) {
                data.method = chargeType;
              } else {
                data.method = 0;
              }

              data.agentCode = "all";
              let targetAgentCode = $("#agent-list").val();
              if (targetAgentCode) {
                data.agentCode = targetAgentCode;
              }

              data.startDate = $("#exchange-history-period").val().split(" - ")[0];
              data.endDate = $("#exchange-history-period").val().split(" - ")[1];

              delete data.columns;
            },
            dataSrc: function(res) {
              if (res.data) {
                for (let i = 0; i < res.data.length; i++) {
                  res.data[i].no = Number(i + 1) + Number(res.start);
                  res.data[i].parentCode = convertString(res.data[i].parentCode, 30);
                  res.data[i].agentCode = convertString(res.data[i].agentCode, 30);
                  res.data[i].chargeType = chargeTypeHtml[Number(res.data[i].chargeType)];
                  res.data[i].chargeAmount = convertNumber(res.data[i].chargeAmount);
                  res.data[i].parentPrevBalance = convertNumber(res.data[i].parentPrevBalance);
                  res.data[i].parentAfterBalance = convertNumber(res.data[i].parentAfterBalance);
                  res.data[i].agentPrevBalance = convertNumber(res.data[i].agentPrevBalance);
                  res.data[i].agentAfterBalance = convertNumber(res.data[i].agentAfterBalance);
                  res.data[i].createdAt = convertDate(res.data[i].createdAt);
                }

                $("#exchange-history-count").html(`(${res.recordsTotal})`);
              }

              return res.data;
            },
          },
        });
      }
    }

    function getChildAgents(id) {
      $.ajax({
        type: "POST",
        url: `/api/agent/${id}/child`,
        success: function(res) {
          if (res.status == 1) {
            let data = det(res.child);
            let optionStr = `<option value="all"> <%= __('agent_exchange_history.all_agent') %> </option>`;

            for (let i = 0; i < data.length; i++) {
              optionStr += `<option value = '${data[i].agentCode}'> ${data[i].agentCode} </option>`;
            }

            $("#agent-list").html(optionStr);
            $("#agent-list").val("all");
            tail.select("#agent-list", {
              search: true,
              width: 160,
              locale: '<%= session.locale %>'
            });
            tail.select("#target-charge-type", {
              search: false,
              width: 160,
              locale: '<%= session.locale %>',
              locale: '<%= session.locale %>'
            });
          }
        },
      });
    }

    drawTable();
    getChildAgents(sessionAgentId);